name: CI

on:
  push:
    branches: [main]
  merge_group:
  pull_request:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  asdf:
    name: ASDF
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      # cache the ASDF directory, using the values from .tool-versions
      - name: ASDF cache
        id: asdf-cache
        uses: actions/cache@v4
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
      - uses: asdf-vm/actions/install@v3
      - name: Install Hex/Rebar
        run: |
          mix local.rebar --force
          mix local.hex --force
      - if: always() && steps.asdf-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: ${{ steps.asdf-cache.outputs.cache-primary-key }}
          path: ~/.asdf

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: asdf
    steps:
      - uses: actions/checkout@v4
      - name: ASDF cache
        uses: actions/cache@v4
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
        id: asdf-cache
      - uses: mbta/actions/reshim-asdf@v2
      # The asdf job should have prepared the cache. Exit if it didn't for some reason.
      - run: exit 1
        if: steps.asdf-cache.outputs.cache-hit != 'true'
      - name: Restore dependencies cache
        id: deps-cache
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies (if needed)
        if: steps.deps-cache.outputs.cache-hit != 'true'
        run: mix deps.get
      - name: Compile (warnings as errors)
        run: mix compile --force --warnings-as-errors

  checks:
    name: Code Checks
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
      - uses: mbta/actions/reshim-asdf@v2
      - uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
      - name: Check formatting
        run: mix format --check-formatted
      - name: Credo
        run: mix credo --strict
      - name: Sobelow (Security)
        run: mix sobelow -i Config.HTTPS,Config.Headers --skip --exit
      - uses: mbta/actions/dialyzer@v2

  tests:
    name: Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Fetch LFS objects
        run: git lfs checkout
      - uses: actions/cache@v4
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
      - uses: mbta/actions/reshim-asdf@v2
      - uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
      - name: Run tests
        run: mix coveralls.lcov
      - name: Save PR information
        run: |
          echo "${{ github.event.pull_request.number }}" > cover/PR_NUMBER
          echo "${{ github.event.pull_request.head.sha }}" > cover/PR_SHA
        if: github.event.pull_request
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: elixir-lcov
          path: cover/

  standard_js:
    name: StandardJS
    runs-on: ubuntu-latest
    needs: asdf
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-v2-${{ hashFiles('.tool-versions') }}
      - uses: mbta/actions/reshim-asdf@v2
      - uses: actions/cache@v4
        with:
          path: assets/node_modules
          key: ${{ runner.os }}-nodejs-${{ hashFiles('assets/package-lock.json') }}
      - run: npm ci
        working-directory: assets
      - run: npm run standard
        working-directory: assets
